$ docker container ls
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                     NAMES
6af214a68c7a   mongo     "docker-entrypoint.sâ€¦"   15 seconds ago   Up 15 seconds   0.0.0.0:3456->27017/tcp   todo-backend-mongo-1

hatohui@hatohui MINGW64 /d/Programming/2024/Repositories/part12-containers-applications/todo-app/todo-backend (main)
$ docker exec -it todo-backend-mongo-1 bash

root@6af214a68c7a:/# mongosh -u root -p example
Current Mongosh Log ID: 67a58b67599c607fc3544ca6
Connecting to:          mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.8
Using MongoDB:          8.0.4
Using Mongosh:          2.3.8

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-02-07T04:24:36.691+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2025-02-07T04:24:37.469+00:00: For customers running the current memory allocator, we suggest changing the contents of the following sysfsFile     
   2025-02-07T04:24:37.469+00:00: We suggest setting the contents of sysfsFile to 0.
   2025-02-07T04:24:37.469+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2025-02-07T04:24:37.469+00:00: vm.max_map_count is too low
   2025-02-07T04:24:37.469+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
------

test> show dbs
admin         100.00 KiB
config         12.00 KiB
local          72.00 KiB
the_database   40.00 KiB
test> use the_database
switched to db the_database
the_database> show collections
todos
the_database> db.todos.find({})
[
  {
    _id: ObjectId('67a58b034194cc4c3a544ca7'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
    done: false
  }
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
  },
  {
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
    done: false
  }
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
    done: false
  }
]
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
  },
  {
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
    done: false
  }
]
the_database>                                                              

the_database> db.todos.insertOne({text: "Increase the number of tools in my tool belt", done: false});
{
  acknowledged: true,
  insertedId: ObjectId('67a58cfc599c607fc3544ca7')
}
the_database> db.todos.find({})                                            
[
  {
    _id: ObjectId('67a58b034194cc4c3a544ca7'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('67a58b034194cc4c3a544ca8'),
    text: 'Learn about containers',
    done: false
  },
  {
    _id: ObjectId('67a58cfc599c607fc3544ca7'),
    text: 'Increase the number of tools in my tool belt',
    done: false
  }
]
the_database>